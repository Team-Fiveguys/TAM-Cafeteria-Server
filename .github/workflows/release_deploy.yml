name: TAM Release CI/CD

on:
  pull_request:
    types: [closed]
  workflow_dispatch: # 수동 실행도 가능하도록

jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'main'

    steps:
      - name: Checkout
        uses: actions/checkout@v2 # 코드 check out

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17 # 자바 설치
          distribution: 'temurin'

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash # 권한 부여

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash # build 시작

      - name: Get current time
        uses: 1466587594/get-current-time@v2
        id: current-time
        with:
          format: YYYY-MM-DDTHH-mm-ss
          utcOffset: "+09:00" # build 시점의 시간확보

      - name: Show Current Time
        run: echo "CurrentTime=${{ steps.current-time.outputs.time }}"
        shell: bash # 확보한 시간 보여주기

      - name: Zip artifacts
        run: |
          zip -j application.zip build/libs/*.jar
        shell: bash

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACTION_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_ACTION_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Upload to S3
        run: |
          aws s3 cp application.jar s3://tam-cafeteria-release/jars/application.jar

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Deploy to AWS CodeDeploy
        run: |
          aws deploy create-deployment \
            --application-name tam-release-code \
            --deployment-group-name tam-release-group \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --s3-location bucket=tam-cafeteria-release,key=jars/application.jar,bundleType=zip
